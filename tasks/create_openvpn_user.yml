---
- name: "VPN | Keys creation | Ensure {{ user.name }} keys directories"
  file:
    path: /etc/openvpn/client_keys/{{ user.name }}
    state: directory
  tags:
    - create_users
    - openvpn_users

- name: VPN | Keys creation | Generate client certificates
  shell: ". ./vars ; ./build-key --batch {{ user.name }}"
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: "/etc/openvpn/easy-rsa/keys/{{ user.name }}.crt"
  register: user_cert
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Ensure user ccd file from ip-info block
  copy:
    content: "ifconfig-push {{ user.ip_info }}"
    dest: "{{ client_config_dir_path }}/{{ user.name }}"
    owner: root
    group: root
    mode: 0755
  when: user.ip_info is defined
  tags:
  - create_users
  - openvpn_users

- name: VPN | Client config creation | Ensure user ccd file
  template:
    src: ccd
    dest: "{{ client_config_dir_path }}/{{ user.name }}"
    owner: root
    group: root
    mode: 0755
  when: user.ccd is defined
  tags:
  - create_users
  - openvpn_users

- name: VPN | Client config creation | Register server CA key
  slurp:
    src: "/etc/openvpn/server_keys/ca.crt"
  register: ca_cert
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Register tls-auth key
  slurp:
    src: "/etc/openvpn/server_keys/ta.key"
  register: tls_auth
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Register client cert
  slurp:
    src: "/etc/openvpn/easy-rsa/keys/{{ user.name }}.crt"
  register: client_cert
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Register client key
  slurp:
    src: "/etc/openvpn/easy-rsa/keys/{{ user.name }}.key"
  register: client_key
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Generate client config
  template:
    src: client.ovpn
    dest: /etc/openvpn/client_keys/{{ user.name }}/{{ user.name }}.ovpn
    owner: root
    group: root
    mode: 0400
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Fetch client config to localhost
  fetch:
    src: /etc/openvpn/client_keys/{{ user.name }}/{{ user.name }}.ovpn
    dest: /tmp/{{ cert_prefix }}{{ user.name }}.ovpn
    flat: yes
  when: user_cert.changed
  tags:
    - create_users
    - openvpn_users

- name: VPN | Client config creation | Send config to user email
  mail:
    host: "{{ mail.host }}"
    port: "{{ mail.port }}"
    username: "{{ mail.user }}"
    sender: "{{ mail.user }}"
    password: "{{ mail.secret }}"
    to: "{{ user.email }}"
    subject: "{{ mail.subject }}"
    body: "{{ mail.body }}"
    attach: ["/etc/openvpn/client_keys/{{ user.name }}/{{ user.name }}.ovpn"]
  when: user.email is defined and mail.host is defined and user_cert.changed
  failed_when: False
  tags:
    - create_users
    - openvpn_users
    - send_mails
